{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"sstar","text":"<p><code>sstar</code> is a Python package for detecting archaic introgression from population genetic data with S* scores (Plagnol and Wall 2006), which can be used for detecting introgression not only in humans, but also in other species, e.g. Kulhwilm et al. (2019).</p>"},{"location":"#requirements","title":"Requirements","text":"<p><code>sstar</code> works on UNIX/LINUX operating systems and tested with the following:</p> <ul> <li>Python 3.8/3.9</li> <li>R 4.1</li> <li>Python packages:<ul> <li>demes</li> <li>numpy</li> <li>pandas</li> <li>rpy2</li> <li>scikit-allel</li> <li>scipy</li> </ul> </li> <li>R packages:<ul> <li>MASS</li> <li>mgcv</li> <li>stat</li> </ul> </li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Users should first install R and all the R dependencies listed above. Please ensure the path for the dynamic libraries in R is in the environment variable <code>$LD_LIBRARY_PATH</code>. For example, if the dynamic libraries in R are in the path <code>/usr/local/lib/R/lib/</code>, users can add this path with the following command:</p> <pre><code>export LD_LIBRARY_PATH=/usr/local/lib/R/lib:$LD_LIBRARY_PATH\n</code></pre> <p>Then users can install <code>sstar</code> with <code>pip</code>.</p> <pre><code>pip install sstar\n</code></pre> <p>Users can also use <code>conda</code> to create a virtual environment and install <code>sstar</code> with this conda-env.yml or this environment.yml in sstar-analysis. To install <code>conda</code>, please follow the instruction. We recommend users use mamba to create the virtual environment, because <code>mamba</code> is much faster than <code>conda</code>. Then users can use the following commands:</p> <pre><code>conda install mamba -n base -c conda-forge\nmamba env create -f conda-env.yml\nconda activate sstar\nexport R_LIBS=$CONDA_PREFIX/lib/R/library\n</code></pre> <p>Users may verify whether using the correct versions of Python and R under the virtual environment sstar or not with the following commands:</p> <pre><code>which python\nwhich R\n</code></pre> <p>And it should return some paths similar to</p> <pre><code>/path/to/conda/envs/sstar/bin/python\n/path/to/conda/envs/sstar/bin/R\n</code></pre>"},{"location":"#citations","title":"Citations","text":"<p>If you find <code>sstar</code> is useful, please cite</p> <ul> <li>Plagnol V, Wall JD. 2006. Possible ancestral structure in human populations. PLoS Genet. 2: e105.</li> <li>Vernot B, Akey JM. 2014. Resurrecting surviving Neandertal lineages from modern human genomes. Science 343: 1017\u20131021.</li> <li>Vernot B, et al. 2016. Excavating Neandertal and Denisovan DNA from the genomes of Melanesian individuals. Science 352: 235\u2013239.</li> <li>Huang X, Kruisz P, Kuhlwilm M. 2022. sstar: A Python package for detecting archaic introgression from population genetic data with S*. Mol Biol Evol 39: msac212.</li> </ul>"},{"location":"examples/","title":"Examples","text":"<p>A Snakefile for running the whole pipeline can be found here.</p> <p>Users need to install <code>conda</code> first. See conda installation for instruction. We recommend users use mamba to create the virtual environment, because <code>mamba</code> is much faster than <code>conda</code>.</p> <p>Users can dry-run the whole pipeline as follows:</p> <pre><code>git clone https://github.com/xin-huang/sstar\ncd ./sstar/examples/snakepipe\nconda install mamba -n base -c conda-forge\nmamba env create -f conda-env.yml\nconda activate sstar\nexport R_LIBS=$CONDA_PREFIX/lib/R/library\nsnakemake -n -p\n</code></pre> <p>Users can use <code>snakemake -c 1</code> for running the whole pipeline locally or submit jobs to <code>SLURM</code> with <code>mkdir logs_slurm &amp;&amp; snakemake --profile . -j 1</code>. Users can modify config.yaml for submitting jobs to other scheduling system, such as <code>SGE</code>.</p>"},{"location":"references/","title":"References","text":"<ul> <li>Kuhlwilm M, Han S, Sousa VC, Excoffier L, Marques-Bonet T. 2019. Ancient admixture from an extinct ape lineage into bonobos. Nat. Ecol. Evol. 3: 957\u2013965. Available from: https://doi.org/10.1038/s41559-019-0881-7</li> <li>Plagnol V, Wall JD. 2006. Possible Ancestral Structure in Human Populations. PLoS Genet. 2: e105. Available from: http://dx.plos.org/10.1371/journal.pgen.0020105</li> <li>Vernot B, Akey JM. 2014. Resurrecting Surviving Neandertal Lineages from Modern Human Genomes. Science 343: 1017\u20131021. Available from: http://science.sciencemag.org/content/343/6174/1017.abstract</li> <li>Vernot B, Tucci S, Kelso J, Schraiber JG, Wolf AB, Gittelman RM, Dannemann M, Grote S, McCoy RC, Norton H, et al. 2016. Excavating Neandertal and Denisovan DNA from the genomes of Melanesian individuals. Science 352: 235\u2013239. Available from: http://science.sciencemag.org/content/352/6282/235.abstract</li> </ul>"},{"location":"userguide/matchrate/","title":"Calculate source match rates","text":""},{"location":"userguide/matchrate/#input","title":"Input","text":"<p>To calculate source match rates, users should provide a VCF file containing genotypes from the reference, target, and source populations (e.g. test.match.rate.data.vcf). Users also need to provide three files containing names of individuals from the reference, target and source populations (e.g. ref.ind.list, tgt.ind.list and nean.ind.list) for analysis. The file (e.g. test.match.rate.score.exp.results) containing S* scores from <code>sstar score</code> is also required.</p> <p>Users can calculate source match rates with the following command:</p> <pre><code>sstar matchrate --vcf test.match.rate.data.vcf --ref ref.ind.list --tgt tgt.ind.list --src nean.ind.list --score test.match.rate.score.exp.results --output test.match.rate.results\n</code></pre> <p>The expected result above can be found in test.match.rate.exp.results.</p>"},{"location":"userguide/matchrate/#output","title":"Output","text":"<p>An example for the output is below:</p> chrom start end sample match_rate src_sample 21 9400000 9450000 NA06986 0.0454545 Nean <p>The meanings of the first to fourth columns are the same as those in the output from <code>sstar score</code>. The meanings of the remaining columns:</p> <ul> <li>The <code>match_rate</code> column is the source match rate on the current region.</li> <li>The <code>src_sample</code> column is the name of the individual from the source population for calculating the source match percentage.</li> </ul>"},{"location":"userguide/matchrate/#settings","title":"Settings","text":"<p>By default, <code>sstar</code> assumes the reference allele is the ancestral allele and the alternative allele is the dervied allele. Users can use the argument <code>--anc-allele</code> with a BED format file (e.g. test.anc.allele.bed) to define the ancestral allele for each variant. If <code>--anc-allele</code> is used, then variants without ancestral allele information will be removed. Users also can provide a BED file (e.g. test.mapped.region.bed) defining non-overlapping mapped regions with the argument <code>--mapped-region</code>. Finally, users can use <code>--thread</code> to specifiy numbers of CPUs in order to speed up the calculation. If users do not specify numbers of CPUs.</p>"},{"location":"userguide/overview/","title":"Overview","text":"<p>There are five subcommands in <code>sstar</code>:</p> <ul> <li>score</li> <li>quantile</li> <li>threshold</li> <li>matchrate</li> <li>tract</li> </ul> <p>To display help information for each subcommand, users can use</p> <pre><code>sstar subcommand -h\n</code></pre> <p>For example,</p> <pre><code>sstar score -h\n</code></pre> <p>Note: <code>sstar</code> assumes a variant is bi-allelic among reference, target, and source populations. Please check your data carefully before using <code>sstar</code>. In this manual, we define the population without introgressed fragments as the reference population, the population receiving introgressed fragments as the target population, and the population donating introgressed fragments as the source population. Besides, <code>sstar</code> assumes an individual is diploid.</p>"},{"location":"userguide/quantile/","title":"Calculate quanitles of expected S*","text":"<p><code>sstar</code> provides a function <code>quantile</code> to estimate different quantiles of expected S* scores from simualted data without introgression. If users need to estimate quantiles of expected S* with large scale simulation, we recommend users follow our <code>sstar</code> pipelines in sstar-analysis, for example, sstar.snake.</p>"},{"location":"userguide/quantile/#input","title":"Input","text":"<p>Users need to install the <code>ms</code> program from Hudson Lab and provide a demographic model (e.g. BonoboGhost_4K19_no_introgression.yaml) in Demes YAML format. Then users can use the following command:</p> <pre><code>sstar quantile --model BonoboGhost_4K19_no_introgression.yaml --ms-dir ./msdir/ --N0 1000 --nsamp 22 --nreps 20000 --ref-index 4 --ref-size 20 --tgt-index 3 --tgt-size 2 --mut-rate 1.2e-8 --rec-rate 0.7e-8 --seq-len 40000 --snp-num-range 25 30 5 --output-dir quantiles --thread 2\n</code></pre> <p>The meaning of each option can be found using <code>sstar quantile -h</code>.</p> <p>The expected result above can be found in test.quantile.exp.summary.</p>"},{"location":"userguide/quantile/#output","title":"Output","text":"<p>An example for the output is below:</p> S*_score SNP_num quantile log(local_recomb_rate) 62168.0 25 0.5 -8.154901959985743 <p>The meaning of each column:</p> <ul> <li>The <code>S*_score</code> column is the S* score.</li> <li>The <code>SNP_number</code> column is the number of SNPs.</li> <li>The <code>quantile</code> column is the quantile of the expected S*_score in the simulated dataset.</li> <li>The <code>rec_rate</code> column is the logarithm of the local recombination rate.</li> </ul>"},{"location":"userguide/score/","title":"Calculate S* scores","text":""},{"location":"userguide/score/#input","title":"Input","text":"<p>To calculate S* scores, users should provide a VCF file containing genotypes from the reference and target populations (e.g. test.score.data.vcf). Users also need to provide two files containing names of individuals from the reference and target populations (e.g. test.ref.ind.list and test.tgt.ind.list) for analysis.</p> <p>Users can calculate S* scores with the following command:</p> <pre><code>    sstar score --vcf test.data.vcf --ref test.ref.ind.list --tgt test.tgt.ind.list --output test.score.results\n</code></pre> <p>The expected result above can be found in test.score.exp.results.</p>"},{"location":"userguide/score/#output","title":"Output","text":"<p>An example for the output is below:</p> chrom start end sample S*_score region_ind_SNP_number S*_SNP_number S*_SNPs 21 0 50000 ind1 51470 11 6 2309,25354,26654,29724,40809,45079 <p>The meaning of each column:</p> <ul> <li>The <code>chrom</code> column is the name of the chromosome.</li> <li>The <code>start</code> column is the start position of the current window for calculating S* scores.</li> <li>The <code>end</code> column is the end position of the current window for calculating S* scores.</li> <li>The <code>sample</code> column is the name of the individual.</li> <li>The <code>S*_score</code> column is the estimated S* score.</li> <li>The <code>region_ind_SNP_number</code> column is the number of shared derived variants in the current window between all the individuals from the reference populations and the current individual from the target population.</li> <li>The <code>S*_SNP_number</code> column is the number of S* SNPs found in the current individual.</li> <li>The <code>S*_SNPs</code> column is the positions for S* SNPs found in the current individual.</li> </ul>"},{"location":"userguide/score/#settings","title":"Settings","text":"<p>By default, <code>sstar</code> assumes the reference allele is the ancestral allele and the alternative allele is the dervied allele. Users can use the argument <code>--anc-allele</code> with a BED format file (e.g. test.anc.allele.bed) to define the ancestral allele for each variant. If <code>--anc-allele</code> is used, then variants without ancestral allele information will be removed. Besides, <code>sstar</code> uses a window size with 50,000 bp and step size with 10,000 bp for calculating S* scores. Users can change these settings with the arguments <code>--win-len</code> and <code>--win-step</code>. Finally, users can use <code>--thread</code> to specifiy numbers of CPUs in order to speed up the calculation.</p>"},{"location":"userguide/threshold/","title":"Calculate significant S* score thresholds","text":""},{"location":"userguide/threshold/#input","title":"Input","text":"<p>To determine the significance of S* scores, users should use data from simulations. Users need to provide data from a simulated dataset (e.g. gravel_asn_scale_60k.simulated.data) for building a generalized additive model to predict the expected S* score under a demographic model without introgression. This file can be created with the command <code>sstar quantile</code> or the <code>sstar</code> pipeline sstar.snake in sstar-analysis. In the simulation, S* is calculated for a given number of SNPs per window and a given recombination rate. For each value of number of SNPs (or a grid of values in case both number of SNPs and recombination rate are used), the simulation should be of succifient scale (e.g. simulating 20,000 windows), of the same window size used for calculating S* in real data (e.g. 50kbp), and with the same number of individuals used in real data.</p> <p>An example for the simulated dataset (using the software ms) is below:</p> S*_score SNP_number quantile log(local_recomb_rate) 0 10 0.8 -7.7500000013365 <p>The meaning of each column:</p> <ul> <li>The S*_score column is the S* score at a given quantile (column 3), in a simulated dataset for a given number of SNPs (column 2) and recombination rate (column 4).</li> <li>The SNP_number column is the number of SNPs defined to occur within all windows of a simulated dataset for which quantiles and S* scores are obtained.</li> <li>The quantile column is the quantile at which the S* score in column 1 is observed in the simulated dataset </li> <li>The log(local_recomb_rate) column is the logarithm of the local recombination rate of a simulated dataset.</li> </ul> <p>Users also need to provide the file containing S* scores estimated from real data (e.g. test.score.exp.results). Users can use a BED file (e.g. hum.windows.50k.10k.recomb.map) to specify local recombination rates across the genome. If a window is not found in the recombination map, while it is in the output file from <code>sstar score</code>, then this window will be ignored when calculating significant thresholds.</p> <p>Users can estimate significant S* score thresholds giving a quantile 0.99 with the following command:</p> <pre><code>sstar threshold --score test.score.exp.results --sim-data gravel_asn_scale_60k.simulated.data --recomb-map hum.windows.50k.10k.recomb.map --quantile 0.99 --output test.threshold.results\n</code></pre> <p>The expected result above can be found in test.threshold.exp.results</p>"},{"location":"userguide/threshold/#output","title":"Output","text":"<p>An example for the output is below:</p> chrom start end sample S*_score expected_S*_score local_recomb_rate quantile significant 21 9480000 9530000 NA06984 48493 53263.269232 1.29162 0.99 False 21 9650000 9700000 NA06984 55639 53754.835563 1.29162 0.99 True <p>The meanings of the first to fifth columns are the same as those in the output from <code>sstar score</code>. The meanings of the remaining columns:</p> <ul> <li>The <code>expected_S*_score</code> column is the expected S* score calculated under the null model (i.e. without introgression).</li> <li>The <code>local_recomb_rate</code> column is the local recombination rate in the current window.</li> <li>The <code>quantile</code> column is the quantile used to determing whether the S* score is significant.</li> <li>The <code>significant</code> column is an indicator indicating whether the S* score is significant (i.e. <code>S*_score</code> &gt; <code>expected_S*_score</code>).</li> </ul>"},{"location":"userguide/threshold/#settings","title":"Settings","text":"<p>In the absence of a recombination map for the tested population, a uniform recombination rate can be used. Users may add the argument <code>--recomb-rate</code> instead of a recombination map to estimate thresholds.</p>"},{"location":"userguide/tract/","title":"Get candidate introgressed fragments","text":""},{"location":"userguide/tract/#input","title":"Input","text":"<p>To obtain candidate introgressed fragments from <code>sstar</code>, users should provide the output (e.g. test.tract.threshold) from <code>sstar threshold</code>. If no source genome is available, users can use the following command:</p> <pre><code>sstar tract --threshold test.tract.threshold --output-prefix test\n</code></pre> <p>If one source individual is available, users also can calculate source match rates and output these source match rates and candidate introgressed regions in a single BED file.</p> <pre><code>sstar tract --threshold test.tract.threshold --output-prefix test --match-rate test.tract.src1.match.rate\n</code></pre> <p>If source genomes from two different source populations are available, users could provide the output (e.g. test.tract.src1.match.rate and test.tract.src2.match.rate) from <code>sstar matchrate</code>, and use the following command:</p> <pre><code>sstar tract --threshold test.tract.threshold --output-prefix test --match-rate test.tract.src1.match.rate test.tract.src2.match.rate\n</code></pre>"},{"location":"userguide/tract/#output","title":"Output","text":"<p>BED files containing candidate introgressed fragments will be generated, e.g. test.tract.exp.bed</p> <p>An example for the output is below:</p> 1 75030000 75080000 tsk_10 0.280797 <ul> <li>The first column is the name of the chromosome.</li> <li>The second column is the start position.</li> <li>The third column is the end position.</li> <li>The fourth column is the name of the sample.</li> <li>The fifth column is the source match rate.</li> </ul>"}]}